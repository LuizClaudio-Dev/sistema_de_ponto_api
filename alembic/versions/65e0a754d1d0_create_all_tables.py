"""create_all_tables

Revision ID: 65e0a754d1d0
Revises: 
Create Date: 2025-08-30 20:38:26.175058

"""
from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '65e0a754d1d0'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('empresas',
                    sa.Column('id_empresa', sa.Integer(), nullable=False),
                    sa.Column('cnpj', sa.Text(), nullable=False),
                    sa.Column('razao_social', sa.String(
                        length=100), nullable=False),
                    sa.Column('nome_fantasia', sa.String(
                        length=100), nullable=False),
                    sa.Column('cep', sa.String(length=8), nullable=True),
                    sa.Column('logradouro', sa.String(
                        length=100), nullable=True),
                    sa.Column('numero', sa.String(length=10), nullable=True),
                    sa.Column('bairro', sa.String(length=100), nullable=True),
                    sa.Column('cidade', sa.String(length=100), nullable=True),
                    sa.Column('uf', sa.String(length=2), nullable=True),
                    sa.Column('ativo', sa.SMALLINT(), nullable=False,
                              server_default=sa.text('1')),
                    sa.Column('motivo', sa.Text(), nullable=True),
                    sa.Column('data_criacao', sa.TIMESTAMP(), server_default=sa.text(
                        'CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('data_atualizacao',
                              sa.TIMESTAMP(), nullable=True),
                    sa.PrimaryKeyConstraint(
                        'id_empresa', name='empresas_pkey'),
                    sa.UniqueConstraint('cnpj')
                    )
    with op.batch_alter_table('empresas', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_empresas_id_empresa'), [
                              'id_empresa'], unique=False)

    op.create_table('feriados',
                    sa.Column('id_feriado', sa.BigInteger(), nullable=False),
                    sa.Column('data_feriado', sa.Date(), nullable=False),
                    sa.Column('descricao', sa.Text(), nullable=True),
                    sa.Column('ativo', sa.SMALLINT(), nullable=False,
                              server_default=sa.text('1')),
                    sa.Column('motivo', sa.Text(), nullable=True),
                    sa.Column('data_criacao', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('data_atualizacao',
                              sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id_feriado', name='feriados_pkey')
                    )
    op.create_table('perfis',
                    sa.Column('id_perfil', sa.BigInteger(), nullable=False),
                    sa.Column('descricao', sa.Text(), nullable=False),
                    sa.Column('ativo', sa.SMALLINT(), nullable=False,
                              server_default=sa.text('1')),
                    sa.Column('motivo', sa.Text(), nullable=True),
                    sa.Column('data_criacao', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('data_atualizacao',
                              sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id_perfil', name='perfis_pkey')
                    )
    op.create_table('permissoes',
                    sa.Column('id_permissao', sa.BigInteger(), nullable=False),
                    sa.Column('descricao', sa.String(
                        length=100), nullable=False),
                    sa.Column('ativo', sa.SMALLINT(), nullable=False,
                              server_default=sa.text('1')),
                    sa.Column('motivo', sa.Text(), nullable=True),
                    sa.Column('data_criacao', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('data_atualizacao',
                              sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint(
                        'id_permissao', name='permissoes_pkey')
                    )
    op.create_table('usuarios',
                    sa.Column('id_usuario', sa.Integer(), nullable=False),
                    sa.Column('nome', sa.String(length=100), nullable=False),
                    sa.Column('cpf', sa.String(length=11), nullable=False),
                    sa.Column('email', sa.String(length=100), nullable=False),
                    sa.Column('senha', sa.Text(), nullable=False),
                    sa.Column('ativo', sa.SMALLINT(), nullable=False,
                              server_default=sa.text('1')),
                    sa.Column('motivo', sa.Text(), nullable=True),
                    sa.Column('data_criacao', sa.TIMESTAMP(), server_default=sa.text(
                        'CURRENT_TIMESTAMP'), nullable=False),
                    sa.Column('data_atualizacao',
                              sa.TIMESTAMP(), nullable=True),
                    sa.PrimaryKeyConstraint(
                        'id_usuario', name='usuarios_pkey'),
                    sa.UniqueConstraint('cpf'),
                    sa.UniqueConstraint('email')
                    )
    with op.batch_alter_table('usuarios', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_usuarios_id_usuario'), [
                              'id_usuario'], unique=False)

    op.create_table('abonos',
                    sa.Column('id_abono', sa.BigInteger(), nullable=False),
                    sa.Column('id_empresa', sa.BigInteger(), nullable=False),
                    sa.Column('id_usuario_solicitante', sa.BigInteger(),
                              server_default=sa.text("'-1'::integer"), nullable=False),
                    sa.Column('id_usuario_autorizador', sa.BigInteger(),
                              server_default=sa.text("'-1'::integer"), nullable=False),
                    sa.Column('descricao', sa.Text(), nullable=True),
                    sa.Column('data_inicio', sa.Date(), nullable=False),
                    sa.Column('data_fim', sa.Date(), nullable=False),
                    sa.Column('periodo', sa.Time(), nullable=False),
                    sa.Column('anexo', sa.Text(), nullable=True),
                    sa.Column('status', sa.SMALLINT(),
                              nullable=False, default=sa.text('0')),
                    sa.Column('ativo', sa.SMALLINT(), nullable=False,
                              server_default=sa.text('1')),
                    sa.Column('motivo', sa.Text(), nullable=True),
                    sa.Column('data_criacao', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('data_atualizacao',
                              sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['id_empresa'], [
                        'empresas.id_empresa'], name='abonos_id_empresa_fkey', ondelete='NO ACTION'),
                    sa.ForeignKeyConstraint(['id_usuario_autorizador'], [
                        'usuarios.id_usuario'], name='abonos_id_usuario_autorizador_fkey', ondelete='NO ACTION'),
                    sa.ForeignKeyConstraint(['id_usuario_solicitante'], [
                        'usuarios.id_usuario'], name='abonos_id_usuario_solicitante_fkey', ondelete='NO ACTION'),
                    sa.PrimaryKeyConstraint('id_abono', name='abonos_pkey')
                    )
    op.create_table('ajustes',
                    sa.Column('id_ajuste', sa.BigInteger(), nullable=False),
                    sa.Column('id_empresa', sa.BigInteger(), nullable=False),
                    sa.Column('id_usuario_solicitante', sa.BigInteger(),
                              server_default=sa.text("'-1'::integer"), nullable=False),
                    sa.Column('id_usuario_autorizador', sa.BigInteger(),
                              server_default=sa.text("'-1'::integer"), nullable=False),
                    sa.Column('data', sa.Date(), nullable=False),
                    sa.Column('descricao', sa.Text(), nullable=True),
                    sa.Column('anexo', sa.Text(), nullable=True),
                    sa.Column('status', sa.SMALLINT(),
                              nullable=False, default=sa.text('0')),
                    sa.Column('ativo', sa.SMALLINT(), nullable=False,
                              server_default=sa.text('1')),
                    sa.Column('motivo', sa.Text(), nullable=True),
                    sa.Column('data_criacao', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('data_atualizacao',
                              sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['id_empresa'], [
                        'empresas.id_empresa'], name='ajustes_id_empresa_fkey', ondelete='NO ACTION'),
                    sa.ForeignKeyConstraint(['id_usuario_autorizador'], [
                        'usuarios.id_usuario'], name='ajustes_id_usuario_autorizador_fkey', ondelete='NO ACTION'),
                    sa.ForeignKeyConstraint(['id_usuario_solicitante'], [
                        'usuarios.id_usuario'], name='ajustes_id_usuario_solicitante_fkey', ondelete='NO ACTION'),
                    sa.PrimaryKeyConstraint('id_ajuste', name='ajustes_pkey')
                    )
    op.create_table('empresas_usuarios_perfis',
                    sa.Column('id_empresa_usuario_perfil',
                              sa.BigInteger(), nullable=False),
                    sa.Column('id_empresa', sa.BigInteger(), server_default=sa.text(
                        "'-1'::integer"), nullable=False),
                    sa.Column('id_usuario', sa.BigInteger(), server_default=sa.text(
                        "'-1'::integer"), nullable=False),
                    sa.Column('id_perfil', sa.BigInteger(), server_default=sa.text(
                        "'-1'::integer"), nullable=False),
                    sa.Column('ativo', sa.SMALLINT(), nullable=False,
                              server_default=sa.text('1')),
                    sa.Column('motivo', sa.Text(), nullable=True),
                    sa.Column('data_criacao', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('data_atualizacao',
                              sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['id_empresa'], ['empresas.id_empresa'],
                                            name='empresas_usuarios_perfis_id_empresa_fkey', ondelete='NO ACTION'),
                    sa.ForeignKeyConstraint(['id_perfil'], [
                        'perfis.id_perfil'], name='empresas_usuarios_perfis_id_perfil_fkey'),
                    sa.ForeignKeyConstraint(['id_usuario'], ['usuarios.id_usuario'],
                                            name='empresas_usuarios_perfis_id_usuario_fkey', ondelete='NO ACTION'),
                    sa.PrimaryKeyConstraint(
                        'id_empresa_usuario_perfil', name='empresas_usuarios_perfis_pkey')
                    )
    op.create_table('perfis_permissoes',
                    sa.Column('id_perfil_permissao',
                              sa.BigInteger(), nullable=False),
                    sa.Column('id_perfil', sa.BigInteger(), nullable=False),
                    sa.Column('id_permissao', sa.BigInteger(), nullable=False),
                    sa.Column('ativo', sa.SMALLINT(), nullable=False,
                              server_default=sa.text('1')),
                    sa.Column('motivo', sa.Text(), nullable=True),
                    sa.Column('data_criacao', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('data_atualizacao',
                              sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['id_perfil'], [
                        'perfis.id_perfil'], name='perfis_permissoes_id_perfil_fkey', ondelete='NO ACTION'),
                    sa.ForeignKeyConstraint(['id_permissao'], ['permissoes.id_permissao'],
                                            name='perfis_permissoes_id_permissao_fkey', ondelete='NO ACTION'),
                    sa.PrimaryKeyConstraint('id_perfil_permissao',
                                            name='perfis_permissoes_pkey')
                    )
    op.create_table('registros_pontos',
                    sa.Column('id_registro_ponto',
                              sa.BigInteger(), nullable=False),
                    sa.Column('id_empresa', sa.BigInteger(), server_default=sa.text(
                        "'-1'::integer"), nullable=False),
                    sa.Column('id_usuario', sa.BigInteger(), server_default=sa.text(
                        "'-1'::integer"), nullable=False),
                    sa.Column('tipo', sa.SMALLINT(), nullable=False, server_default=sa.text('0')),
                    sa.Column('data_hora', sa.DateTime(), nullable=False),
                    sa.Column('latitude', sa.Numeric(
                        precision=10, scale=8), nullable=True),
                    sa.Column('longitude', sa.Numeric(
                        precision=11, scale=8), nullable=True),
                    sa.Column('foto', sa.Text(), nullable=True),
                    sa.Column('saldo_horas', sa.Time(), nullable=True),
                    sa.Column('ativo', sa.SMALLINT(), nullable=False,
                              server_default=sa.text('1')),
                    sa.Column('motivo', sa.Text(), nullable=True),
                    sa.Column('data_criacao', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('data_atualizacao',
                              sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['id_empresa'], [
                        'empresas.id_empresa'], name='registros_pontos_id_empresa_fkey', ondelete='NO ACTION'),
                    sa.ForeignKeyConstraint(['id_usuario'], [
                        'usuarios.id_usuario'], name='registros_pontos_id_usuario_fkey', ondelete='NO ACTION'),
                    sa.PrimaryKeyConstraint('id_registro_ponto',
                                            name='registros_pontos_pkey')
                    )
    op.create_table('ajustes_registros_pontos',
                    sa.Column('id_ajuste_registro_ponto',
                              sa.BigInteger(), nullable=False),
                    sa.Column('id_ajuste', sa.BigInteger(), server_default=sa.text(
                        "'-1'::integer"), nullable=False),
                    sa.Column('id_registro_ponto', sa.BigInteger(),
                              server_default=sa.text("'-1'::integer"), nullable=False),
                    sa.Column('hora_atual', sa.Time(), nullable=True),
                    sa.Column('hora_ajuste', sa.Time(), nullable=True),
                    sa.Column('ativo', sa.SMALLINT(), nullable=False,
                              server_default=sa.text('1')),
                    sa.Column('motivo', sa.Text(), nullable=True),
                    sa.Column('data_criacao', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('data_atualizacao',
                              sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['id_ajuste'], [
                        'ajustes.id_ajuste'], name='ajustes_registros_pontos_id_ajuste_fkey', ondelete='NO ACTION'),
                    sa.ForeignKeyConstraint(['id_registro_ponto'], ['registros_pontos.id_registro_ponto'],
                                            name='ajustes_registros_pontos_id_registro_ponto_fkey', ondelete='NO ACTION'),
                    sa.PrimaryKeyConstraint(
                        'id_ajuste_registro_ponto', name='ajustes_registros_ponto_pkey')
                    )
    # ### end Alembic commands ###
    # ### Comandos que o alembic não sabe dominar bem - criação de domínios e colunas com tipos de domínios ###
    op.execute("""
                CREATE DOMAIN public.status_registro
                    AS smallint
                    DEFAULT 1
                    NOT NULL;

                ALTER DOMAIN public.status_registro OWNER TO neondb_owner;

                ALTER DOMAIN public.status_registro
                    ADD CONSTRAINT status_registro_check CHECK (VALUE = ANY (ARRAY[0, 1, 2]));

                COMMENT ON DOMAIN public.status_registro
                    IS '0 = Inativo, 1 = Ativo, 2 = Excluído';
                """)

    op.execute("""
                CREATE DOMAIN public.status_solicitacao
                    AS smallint
                    DEFAULT 1
                    NOT NULL;

                ALTER DOMAIN public.status_solicitacao OWNER TO neondb_owner;

                ALTER DOMAIN public.status_solicitacao
                    ADD CONSTRAINT status_solicitacao_check CHECK (VALUE = ANY (ARRAY[0, 1, 2]));

                COMMENT ON DOMAIN public.status_solicitacao
                    IS '0 = Pendente, 1 = Aprovada, 2 = Recusada';
               """)
    op.execute("""
                CREATE DOMAIN public.tipo_registro_ponto
                    AS smallint
                    DEFAULT 0
                    NOT NULL;

                ALTER DOMAIN public.tipo_registro_ponto OWNER TO neondb_owner;

                ALTER DOMAIN public.tipo_registro_ponto
                    ADD CONSTRAINT tipo_registro_ponto_check CHECK (VALUE = ANY (ARRAY[0, 1]));

                COMMENT ON DOMAIN public.tipo_registro_ponto
                    IS '0 = Entrada, 1 = Saída';
                """)

    op.execute(
        "ALTER TABLE abonos ALTER COLUMN status TYPE status_solicitacao USING status::status_solicitacao;")
    op.execute(
        "ALTER TABLE abonos ALTER COLUMN ativo TYPE status_registro USING ativo::status_registro;")
    op.execute(
        "ALTER TABLE ajustes ALTER COLUMN status TYPE status_solicitacao USING status::status_solicitacao;")
    op.execute(
        "ALTER TABLE ajustes ALTER COLUMN ativo TYPE status_registro USING ativo::status_registro;")
    op.execute(
        "ALTER TABLE ajustes_registros_pontos ALTER COLUMN ativo TYPE status_registro USING ativo::status_registro;")
    op.execute(
        "ALTER TABLE empresas_usuarios_perfis ALTER COLUMN ativo TYPE status_registro USING ativo::status_registro;")
    op.execute(
        "ALTER TABLE feriados ALTER COLUMN ativo TYPE status_registro USING ativo::status_registro;")
    op.execute(
        "ALTER TABLE perfis ALTER COLUMN ativo TYPE status_registro USING ativo::status_registro;")
    op.execute(
        "ALTER TABLE permissoes ALTER COLUMN ativo TYPE status_registro USING ativo::status_registro;")
    op.execute(
        "ALTER TABLE perfis_permissoes ALTER COLUMN ativo TYPE status_registro USING ativo::status_registro;")
    op.execute(
        "ALTER TABLE registros_pontos ALTER COLUMN ativo TYPE status_registro USING ativo::status_registro;")
    op.execute(
        "ALTER TABLE registros_pontos ALTER COLUMN tipo TYPE tipo_registro_ponto USING tipo::tipo_registro_ponto;")
    op.execute(
        "ALTER TABLE usuarios ALTER COLUMN ativo TYPE status_registro USING ativo::status_registro;")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ajustes_registros_pontos')
    op.drop_table('registros_pontos')
    op.drop_table('perfis_permissoes')
    op.drop_table('empresas_usuarios_perfis')
    op.drop_table('ajustes')
    op.drop_table('abonos')
    with op.batch_alter_table('usuarios', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_usuarios_id_usuario'))

    op.drop_table('usuarios')
    op.drop_table('permissoes')
    op.drop_table('perfis')
    op.drop_table('feriados')
    with op.batch_alter_table('empresas', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_empresas_id_empresa'))

    op.drop_table('empresas')
    # ### end Alembic commands ###

    # ### Comandos que o alembic não sabe dominar bem - "drop" de domínios ###
    op.execute("DROP DOMAIN public.status_registro;")
    op.execute("DROP DOMAIN public.status_solicitacao;")
    op.execute("DROP DOMAIN public.tipo_registro_ponto;")
